{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "c071fcf5",
   "metadata": {
    "papermill": {
     "duration": 0.009156,
     "end_time": "2023-09-10T04:19:36.203959",
     "exception": false,
     "start_time": "2023-09-10T04:19:36.194803",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**This notebook is an exercise in the [Data Cleaning](https://www.kaggle.com/learn/data-cleaning) course.  You can reference the tutorial at [this link](https://www.kaggle.com/alexisbcook/scaling-and-normalization).**\n",
    "\n",
    "---\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4adf102c",
   "metadata": {
    "papermill": {
     "duration": 0.008115,
     "end_time": "2023-09-10T04:19:36.220865",
     "exception": false,
     "start_time": "2023-09-10T04:19:36.212750",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "In this exercise, you'll apply what you learned in the **Scaling and normalization** tutorial.\n",
    "\n",
    "# Setup\n",
    "\n",
    "The questions below will give you feedback on your work. Run the following cell to set up the feedback system."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "53623e0b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-09-10T04:19:36.239765Z",
     "iopub.status.busy": "2023-09-10T04:19:36.239059Z",
     "iopub.status.idle": "2023-09-10T04:19:40.762813Z",
     "shell.execute_reply": "2023-09-10T04:19:40.761592Z"
    },
    "papermill": {
     "duration": 4.536134,
     "end_time": "2023-09-10T04:19:40.765415",
     "exception": false,
     "start_time": "2023-09-10T04:19:36.229281",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Setup Complete\n"
     ]
    }
   ],
   "source": [
    "from learntools.core import binder\n",
    "binder.bind(globals())\n",
    "from learntools.data_cleaning.ex2 import *\n",
    "print(\"Setup Complete\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d74d3ea1",
   "metadata": {
    "papermill": {
     "duration": 0.008445,
     "end_time": "2023-09-10T04:19:40.782614",
     "exception": false,
     "start_time": "2023-09-10T04:19:40.774169",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Get our environment set up\n",
    "\n",
    "To practice scaling and normalization, we're going to use a [dataset of Kickstarter campaigns](https://www.kaggle.com/kemical/kickstarter-projects). (Kickstarter is a website where people can ask people to invest in various projects and concept products.)\n",
    "\n",
    "The next code cell loads in the libraries and dataset we'll be using. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c5ddff05",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-09-10T04:19:40.801546Z",
     "iopub.status.busy": "2023-09-10T04:19:40.801127Z",
     "iopub.status.idle": "2023-09-10T04:19:42.675839Z",
     "shell.execute_reply": "2023-09-10T04:19:42.674483Z"
    },
    "papermill": {
     "duration": 1.887702,
     "end_time": "2023-09-10T04:19:42.678842",
     "exception": false,
     "start_time": "2023-09-10T04:19:40.791140",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# modules we'll use\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "# for Box-Cox Transformation\n",
    "from scipy import stats\n",
    "\n",
    "# for min_max scaling\n",
    "from mlxtend.preprocessing import minmax_scaling\n",
    "\n",
    "# plotting modules\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# read in all our data\n",
    "kickstarters_2017 = pd.read_csv(\"../input/kickstarter-projects/ks-projects-201801.csv\")\n",
    "\n",
    "# set seed for reproducibility\n",
    "np.random.seed(0)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "58fa0c8b",
   "metadata": {
    "papermill": {
     "duration": 0.008462,
     "end_time": "2023-09-10T04:19:42.696202",
     "exception": false,
     "start_time": "2023-09-10T04:19:42.687740",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Let's start by scaling the goals of each campaign, which is how much money they were asking for.  After scaling, all values lie between 0 and 1."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "2188966e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-09-10T04:19:42.715858Z",
     "iopub.status.busy": "2023-09-10T04:19:42.715473Z",
     "iopub.status.idle": "2023-09-10T04:51:26.163883Z",
     "shell.execute_reply": "2023-09-10T04:51:26.162740Z"
    },
    "papermill": {
     "duration": 1903.47025,
     "end_time": "2023-09-10T04:51:26.175346",
     "exception": false,
     "start_time": "2023-09-10T04:19:42.705096",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Scaled data')"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x300 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# select the usd_goal_real column\n",
    "original_data = pd.DataFrame(kickstarters_2017.usd_goal_real)\n",
    "\n",
    "# scale the goals from 0 to 1\n",
    "scaled_data = minmax_scaling(original_data, columns=['usd_goal_real'])\n",
    "\n",
    "# plot the original & scaled data together to compare\n",
    "fig, ax=plt.subplots(1,2,figsize=(15,3))\n",
    "sns.histplot(kickstarters_2017.usd_goal_real, ax=ax[0])\n",
    "ax[0].set_title(\"Original Data\")\n",
    "sns.histplot(scaled_data, ax=ax[1])\n",
    "ax[1].set_title(\"Scaled data\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "cedfa169",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-09-10T04:51:26.197094Z",
     "iopub.status.busy": "2023-09-10T04:51:26.196660Z",
     "iopub.status.idle": "2023-09-10T04:51:26.217983Z",
     "shell.execute_reply": "2023-09-10T04:51:26.216768Z"
    },
    "papermill": {
     "duration": 0.034624,
     "end_time": "2023-09-10T04:51:26.220520",
     "exception": false,
     "start_time": "2023-09-10T04:51:26.185896",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Original data\n",
      "Preview:\n",
      "    usd_goal_real\n",
      "0        1533.95\n",
      "1       30000.00\n",
      "2       45000.00\n",
      "3        5000.00\n",
      "4       19500.00\n",
      "Minimum value: 0.01 \n",
      "Maximum value: 166361390.71\n",
      "______________________________\n",
      "\n",
      "Scaled data\n",
      "Preview:\n",
      "    usd_goal_real\n",
      "0       0.000009\n",
      "1       0.000180\n",
      "2       0.000270\n",
      "3       0.000030\n",
      "4       0.000117\n",
      "Minimum value: 0.0 \n",
      "Maximum value: 1.0\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_20/145425239.py:2: FutureWarning: Calling float on a single element Series is deprecated and will raise a TypeError in the future. Use float(ser.iloc[0]) instead\n",
      "  print('Minimum value:', float(original_data.min()),\n",
      "/tmp/ipykernel_20/145425239.py:3: FutureWarning: Calling float on a single element Series is deprecated and will raise a TypeError in the future. Use float(ser.iloc[0]) instead\n",
      "  '\\nMaximum value:', float(original_data.max()))\n",
      "/tmp/ipykernel_20/145425239.py:7: FutureWarning: Calling float on a single element Series is deprecated and will raise a TypeError in the future. Use float(ser.iloc[0]) instead\n",
      "  print('Minimum value:', float(scaled_data.min()),\n",
      "/tmp/ipykernel_20/145425239.py:8: FutureWarning: Calling float on a single element Series is deprecated and will raise a TypeError in the future. Use float(ser.iloc[0]) instead\n",
      "  '\\nMaximum value:', float(scaled_data.max()))\n"
     ]
    }
   ],
   "source": [
    "print('Original data\\nPreview:\\n', original_data.head())\n",
    "print('Minimum value:', float(original_data.min()),\n",
    "      '\\nMaximum value:', float(original_data.max()))\n",
    "print('_'*30)\n",
    "\n",
    "print('\\nScaled data\\nPreview:\\n', scaled_data.head())\n",
    "print('Minimum value:', float(scaled_data.min()),\n",
    "      '\\nMaximum value:', float(scaled_data.max()))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3af2e470",
   "metadata": {
    "papermill": {
     "duration": 0.074947,
     "end_time": "2023-09-10T04:51:26.305035",
     "exception": false,
     "start_time": "2023-09-10T04:51:26.230088",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# 1) Practice scaling\n",
    "\n",
    "We just scaled the \"usd_goal_real\" column. What about the \"goal\" column?\n",
    "\n",
    "Begin by running the code cell below to create a DataFrame `original_goal_data` containing the \"goal\" column."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e9fbfd9b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-09-10T04:51:26.326336Z",
     "iopub.status.busy": "2023-09-10T04:51:26.325967Z",
     "iopub.status.idle": "2023-09-10T04:51:26.331170Z",
     "shell.execute_reply": "2023-09-10T04:51:26.330231Z"
    },
    "papermill": {
     "duration": 0.018643,
     "end_time": "2023-09-10T04:51:26.333395",
     "exception": false,
     "start_time": "2023-09-10T04:51:26.314752",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# select the usd_goal_real column\n",
    "original_goal_data = pd.DataFrame(kickstarters_2017.goal)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6f268835",
   "metadata": {
    "papermill": {
     "duration": 0.009332,
     "end_time": "2023-09-10T04:51:26.352548",
     "exception": false,
     "start_time": "2023-09-10T04:51:26.343216",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Use `original_goal_data` to create a new DataFrame `scaled_goal_data` with values scaled between 0 and 1. You must use the `minmax_scaling()` function."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "139536ec",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-09-10T04:51:26.373551Z",
     "iopub.status.busy": "2023-09-10T04:51:26.373117Z",
     "iopub.status.idle": "2023-09-10T04:51:26.399876Z",
     "shell.execute_reply": "2023-09-10T04:51:26.398834Z"
    },
    "papermill": {
     "duration": 0.040319,
     "end_time": "2023-09-10T04:51:26.402369",
     "exception": false,
     "start_time": "2023-09-10T04:51:26.362050",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/javascript": [
       "parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.3333333333333333, \"interactionType\": 1, \"questionType\": 1, \"questionId\": \"1_TryScaling\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"
      ],
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/markdown": [
       "<span style=\"color:#33cc33\">Correct</span>"
      ],
      "text/plain": [
       "Correct"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# TODO: Your code here\n",
    "scaled_goal_data = minmax_scaling(original_goal_data, columns=['goal'])\n",
    "\n",
    "# Check your answer\n",
    "q1.check()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "9ad38a8b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-09-10T04:51:26.424535Z",
     "iopub.status.busy": "2023-09-10T04:51:26.424130Z",
     "iopub.status.idle": "2023-09-10T04:51:26.428601Z",
     "shell.execute_reply": "2023-09-10T04:51:26.427638Z"
    },
    "papermill": {
     "duration": 0.018525,
     "end_time": "2023-09-10T04:51:26.430988",
     "exception": false,
     "start_time": "2023-09-10T04:51:26.412463",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Lines below will give you a hint or solution code\n",
    "#q1.hint()\n",
    "#q1.solution()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1556c486",
   "metadata": {
    "papermill": {
     "duration": 0.009766,
     "end_time": "2023-09-10T04:51:26.451051",
     "exception": false,
     "start_time": "2023-09-10T04:51:26.441285",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# 2) Practice normalization\n",
    "\n",
    "Now you'll practice normalization. We begin by normalizing the amount of money pledged to each campaign."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "0e819b0b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-09-10T04:51:26.473301Z",
     "iopub.status.busy": "2023-09-10T04:51:26.472920Z",
     "iopub.status.idle": "2023-09-10T04:51:30.568335Z",
     "shell.execute_reply": "2023-09-10T04:51:30.567153Z"
    },
    "papermill": {
     "duration": 4.110345,
     "end_time": "2023-09-10T04:51:30.571214",
     "exception": false,
     "start_time": "2023-09-10T04:51:26.460869",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_20/1740611548.py:13: UserWarning: \n",
      "\n",
      "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
      "\n",
      "Please adapt your code to use either `displot` (a figure-level function with\n",
      "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "\n",
      "For a guide to updating your code to use the new functions, please see\n",
      "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
      "\n",
      "  sns.distplot(positive_pledges, ax=ax[0])\n",
      "/tmp/ipykernel_20/1740611548.py:15: UserWarning: \n",
      "\n",
      "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
      "\n",
      "Please adapt your code to use either `displot` (a figure-level function with\n",
      "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "\n",
      "For a guide to updating your code to use the new functions, please see\n",
      "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
      "\n",
      "  sns.distplot(normalized_pledges, ax=ax[1])\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Normalized data')"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x300 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# get the index of all positive pledges (Box-Cox only takes positive values)\n",
    "index_of_positive_pledges = kickstarters_2017.usd_pledged_real > 0\n",
    "\n",
    "# get only positive pledges (using their indexes)\n",
    "positive_pledges = kickstarters_2017.usd_pledged_real.loc[index_of_positive_pledges]\n",
    "\n",
    "# normalize the pledges (w/ Box-Cox)\n",
    "normalized_pledges = pd.Series(stats.boxcox(positive_pledges)[0], \n",
    "                               name='usd_pledged_real', index=positive_pledges.index)\n",
    "\n",
    "# plot both together to compare\n",
    "fig, ax=plt.subplots(1,2,figsize=(15,3))\n",
    "sns.distplot(positive_pledges, ax=ax[0])\n",
    "ax[0].set_title(\"Original Data\")\n",
    "sns.distplot(normalized_pledges, ax=ax[1])\n",
    "ax[1].set_title(\"Normalized data\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "2f901465",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-09-10T04:51:30.596592Z",
     "iopub.status.busy": "2023-09-10T04:51:30.595513Z",
     "iopub.status.idle": "2023-09-10T04:51:30.609942Z",
     "shell.execute_reply": "2023-09-10T04:51:30.608581Z"
    },
    "papermill": {
     "duration": 0.030059,
     "end_time": "2023-09-10T04:51:30.612625",
     "exception": false,
     "start_time": "2023-09-10T04:51:30.582566",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Original data\n",
      "Preview:\n",
      " 1     2421.0\n",
      "2      220.0\n",
      "3        1.0\n",
      "4     1283.0\n",
      "5    52375.0\n",
      "Name: usd_pledged_real, dtype: float64\n",
      "Minimum value: 0.45 \n",
      "Maximum value: 20338986.27\n",
      "______________________________\n",
      "\n",
      "Normalized data\n",
      "Preview:\n",
      " 1    10.165142\n",
      "2     6.468598\n",
      "3     0.000000\n",
      "4     9.129277\n",
      "5    15.836853\n",
      "Name: usd_pledged_real, dtype: float64\n",
      "Minimum value: -0.7779954122762203 \n",
      "Maximum value: 30.69054020451361\n"
     ]
    }
   ],
   "source": [
    "print('Original data\\nPreview:\\n', positive_pledges.head())\n",
    "print('Minimum value:', float(positive_pledges.min()),\n",
    "      '\\nMaximum value:', float(positive_pledges.max()))\n",
    "print('_'*30)\n",
    "\n",
    "print('\\nNormalized data\\nPreview:\\n', normalized_pledges.head())\n",
    "print('Minimum value:', float(normalized_pledges.min()),\n",
    "      '\\nMaximum value:', float(normalized_pledges.max()))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b77ca1c8",
   "metadata": {
    "papermill": {
     "duration": 0.011653,
     "end_time": "2023-09-10T04:51:30.636245",
     "exception": false,
     "start_time": "2023-09-10T04:51:30.624592",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "The values have changed significantly with normalization!\n",
    "\n",
    "In the next code cell, you'll take a look at the distribution of the normalized data, where it should now resemble a normal distribution."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c9fde001",
   "metadata": {
    "papermill": {
     "duration": 0.011535,
     "end_time": "2023-09-10T04:51:30.659633",
     "exception": false,
     "start_time": "2023-09-10T04:51:30.648098",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "We used the \"usd_pledged_real\" column. Follow the same process to normalize the \"pledged\" column. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "425c4e77",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-09-10T04:51:30.685036Z",
     "iopub.status.busy": "2023-09-10T04:51:30.684308Z",
     "iopub.status.idle": "2023-09-10T04:51:34.810820Z",
     "shell.execute_reply": "2023-09-10T04:51:34.809814Z"
    },
    "papermill": {
     "duration": 4.141766,
     "end_time": "2023-09-10T04:51:34.813098",
     "exception": false,
     "start_time": "2023-09-10T04:51:30.671332",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_20/3347313754.py:13: UserWarning: \n",
      "\n",
      "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
      "\n",
      "Please adapt your code to use either `displot` (a figure-level function with\n",
      "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "\n",
      "For a guide to updating your code to use the new functions, please see\n",
      "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
      "\n",
      "  sns.distplot(positive_pledges_only, ax=ax[0])\n",
      "/tmp/ipykernel_20/3347313754.py:15: UserWarning: \n",
      "\n",
      "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
      "\n",
      "Please adapt your code to use either `displot` (a figure-level function with\n",
      "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "\n",
      "For a guide to updating your code to use the new functions, please see\n",
      "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
      "\n",
      "  sns.distplot(normalized_values, ax=ax[1])\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Normalized data')"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x300 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# TODO: Your code here!\n",
    "index_positive_pledges = kickstarters_2017.pledged > 0\n",
    "\n",
    "# get only positive pledges (using their indexes)\n",
    "positive_pledges_only = kickstarters_2017.pledged.loc[index_positive_pledges]\n",
    "\n",
    "# normalize the pledges (w/ Box-Cox)\n",
    "normalized_values = pd.Series(stats.boxcox(positive_pledges_only)[0], \n",
    "                              name='pledged', index=positive_pledges_only.index)\n",
    "\n",
    "# plot both together to compare\n",
    "fig, ax = plt.subplots(1,2,figsize=(15,3))\n",
    "sns.distplot(positive_pledges_only, ax=ax[0])\n",
    "ax[0].set_title(\"Original Data\")\n",
    "sns.distplot(normalized_values, ax=ax[1])\n",
    "ax[1].set_title(\"Normalized data\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "664849ec",
   "metadata": {
    "papermill": {
     "duration": 0.012618,
     "end_time": "2023-09-10T04:51:34.839044",
     "exception": false,
     "start_time": "2023-09-10T04:51:34.826426",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "How does the normalized \"usd_pledged_real\" column look different from when we normalized the \"pledged\" column?  Or, do they look mostly the same?\n",
    "\n",
    "Once you have an answer, run the code cell below."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "77443893",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-09-10T04:51:34.866859Z",
     "iopub.status.busy": "2023-09-10T04:51:34.866245Z",
     "iopub.status.idle": "2023-09-10T04:51:34.873242Z",
     "shell.execute_reply": "2023-09-10T04:51:34.872478Z"
    },
    "papermill": {
     "duration": 0.02345,
     "end_time": "2023-09-10T04:51:34.875270",
     "exception": false,
     "start_time": "2023-09-10T04:51:34.851820",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/javascript": [
       "parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.3333333333333333, \"interactionType\": 1, \"questionType\": 4, \"questionId\": \"2_TryNormalization\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"
      ],
      "text/plain": [
       "<IPython.core.display.Javascript object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/markdown": [
       "<span style=\"color:#33cc33\">Correct:</span> \n",
       "\n",
       "The distributions in the normalized data look mostly the same."
      ],
      "text/plain": [
       "Correct: \n",
       "\n",
       "The distributions in the normalized data look mostly the same."
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Check your answer (Run this code cell to receive credit!)\n",
    "q2.check()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c41bcfd9",
   "metadata": {
    "papermill": {
     "duration": 0.013018,
     "end_time": "2023-09-10T04:51:34.901443",
     "exception": false,
     "start_time": "2023-09-10T04:51:34.888425",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "The distributions in the normalized data look mostly the same."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "7c38e6e7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-09-10T04:51:34.931850Z",
     "iopub.status.busy": "2023-09-10T04:51:34.931100Z",
     "iopub.status.idle": "2023-09-10T04:51:34.935351Z",
     "shell.execute_reply": "2023-09-10T04:51:34.934415Z"
    },
    "papermill": {
     "duration": 0.021158,
     "end_time": "2023-09-10T04:51:34.937434",
     "exception": false,
     "start_time": "2023-09-10T04:51:34.916276",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Line below will give you a hint\n",
    "#q2.hint()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "08c4ad7d",
   "metadata": {
    "papermill": {
     "duration": 0.012762,
     "end_time": "2023-09-10T04:51:34.963471",
     "exception": false,
     "start_time": "2023-09-10T04:51:34.950709",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# (Optional) More practice\n",
    "\n",
    "Try finding a new dataset and pretend you're preparing to perform a [regression analysis](https://www.kaggle.com/rtatman/the-5-day-regression-challenge). \n",
    "\n",
    "[These datasets are a good start!](https://www.kaggle.com/rtatman/datasets-for-regression-analysis)\n",
    "\n",
    "Pick three or four variables and decide if you need to normalize or scale any of them and, if you think you should, practice applying the correct technique.\n",
    "\n",
    "# Keep going\n",
    "\n",
    "In the next lesson, learn how to [**parse dates**](https://www.kaggle.com/alexisbcook/parsing-dates) in a dataset."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f34d21e9",
   "metadata": {
    "papermill": {
     "duration": 0.012822,
     "end_time": "2023-09-10T04:51:34.989215",
     "exception": false,
     "start_time": "2023-09-10T04:51:34.976393",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "---\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "*Have questions or comments? Visit the [course discussion forum](https://www.kaggle.com/learn/data-cleaning/discussion) to chat with other learners.*"
   ]
  }
 ],
 "kernelspec": {
  "display_name": "Python 3",
  "language": "python",
  "name": "python3"
 },
 "language_info": {
  "codemirror_mode": {
   "name": "ipython",
   "version": 3
  },
  "file_extension": ".py",
  "mimetype": "text/x-python",
  "name": "python",
  "nbconvert_exporter": "python",
  "pygments_lexer": "ipython3",
  "version": "3.6.4"
 },
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 1925.920668,
   "end_time": "2023-09-10T04:51:38.530461",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2023-09-10T04:19:32.609793",
   "version": "2.4.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
